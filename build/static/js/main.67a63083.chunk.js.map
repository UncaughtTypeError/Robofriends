{"version":3,"sources":["utils/robots.js","containers/DialogueBox.js","components/RoboCard.js","components/CardGrid.js","components/Footer.js","components/SearchBox.js","containers/App.js","serviceWorker.js","index.js"],"names":["robots","id","name","username","emial","about","DialogTitle","withStyles","theme","root","borderBottom","concat","palette","divider","margin","padding","spacing","unit","closeButton","position","right","top","color","grey","props","children","classes","onClose","react_default","a","createElement","DialogTitle_default","disableTypography","className","Typography_default","variant","IconButton_default","aria-label","onClick","Close_default","DialogContent","MuiDialogContent","DialogActions","borderTop","MuiDialogActions","CustomizedDialogDemo","state","open","handleClickOpen","_this","setState","handleClose","_this$props","this","Button_default","size","Dialog_default","aria-labelledby","DialogueBox_DialogTitle","DialogueBox_DialogContent","DialogueBox_DialogActions","React","Component","RoboCard","addClasses","email","imgID","Math","random","toString","replace","substr","Card_default","card","CardActionArea_default","CircularProgress_default","progress","Tooltip_default","tooltip","title","placement","CardMedia_default","component","alt","media","height","image","Divider_default","CardContent_default","gutterBottom","CardActions_default","DialogueBox","maxWidth","fontSize","objectFit","minWidth","zIndex","left","bottom","CardGrid","Grid_default","container","item","xs","wrapper","justify","Number","map","robot","key","src_components_RoboCard","Object","defineProperty","flexGrow","breakpoints","down","control","Footer","BottomNavigation_default","showLabels","BottomNavigationAction_default","label","icon","Link_default","href","link","index_es","width","marginTop","marginBottom","SearchBox","searchChange","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","onChange","borderRadius","shape","backgroundColor","fade","common","white","&:hover","marginLeft","up","pointerEvents","display","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","library","add","fab","fas","createMuiTheme","type","typography","useNextVariants","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","robotsObj","catch","error","console","_this$state","filteredRobots","filter","toLowerCase","includes","length","core_styles","CssBaseline_default","positionFixed","AppBar_default","Toolbar_default","noWrap","grow","components_SearchBox","components_CardGrid","components_Footer","_title","textAlign","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67a63083.chunk.js","sourcesContent":["export const robots = [\r\n  {\r\n    id: 1,\r\n    name: \"T-1000\",\r\n    username: \"robo-1\",\r\n    emial: \"t10001@sky.net\",\r\n    about: \"The T-1000, also known as a Prototype Series 1000 Terminator, is a fictional character in the Terminator franchise. A shapeshifting android assassin, the T-1000 is the main antagonist of Terminator 2: Judgment Day, as well as a minor antagonist in Terminator Genisys and a theme park attraction in Terminator 2 3-D: Battle Across Time. A similar Terminator, referred to as a T-1001 appears in the Fox television series, Terminator: The Sarah Connor Chronicles.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sonny\",\r\n    username: \"robo-2\",\r\n    emial: \"sonny@iro.bot\",\r\n    about: \"Sonny is a character in the film I, Robot (2004). He is portrayed by Alan Tudyk. Sonny is a modified newer model of the N series. He was created by Alfred Lanning and becomes an ally of Susan Calvin and Del Spooner after the death of his creator. Sonny was one of the main characters in the film, but does not appear in any works by Isaac Asimov. Sonny's dreams and the final scene resemble similar images in 'Robot Dreams'\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Gerty\",\r\n    username: \"robo-3\",\r\n    emial: \"gerty@sarang.lunar\",\r\n    about: \"'Good morning, Sam.' GERTY's primary function is to protect Sam, a lone astronaut on a lunar base. This AI is more than just a friend and protector. Sam's only companion, who assists with the base's automation and provides comfort for him.\" \r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"WALL-E\",\r\n    username: \"robo-4\",\r\n    emial: \"walle@pix.ar\",\r\n    about: \"WALL-E, short for Waste Allocation Load Lifter Earth-class, is the last robot left on Earth. He spends his days tidying up the planet, one piece of garbage at a time. Although working diligently to fulfill his directive to clean up the garbage (all the while accompanied by his cockroach friend Hal and music playing from his on-board recorder) he is distracted by his curiosity, collecting trinkets of interest. He stores and displays these 'treasures' such as a birdcage full of rubber ducks, a Rubik's Cube, Zippos, disposable cups filled with plastic cutlery and a golden trophy at his home where he examines and categorizes his finds while throwing away things like a diamond ring, and watching a video cassette of Hello, Dolly! via an iPod viewed through a large Fresnel lens.\"\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"A.W.E.S.O.M.-O 4000\",\r\n    username: \"robo-5\",\r\n    emial: \"awesomo4000@southparkrobotics.corp\",\r\n    about: \"The A.W.E.S.O.M.-O 4000, often simply AWESOM-O, is a large robot the size of a fourth grader manufactured in Japan... actually, it's another of Eric Cartman's aliases, a robot made out of big cardboard boxes, and a blinking red light, with the name written on the chest and a fake speaker. Cartman hoped he could learn all of Butters Stotch's deepest, darkest secret in disguise as the toy robot, but was instead forced to help him administer suppository tablets, give pleasure to an aging movie executive and become a weapon for the Government.\"\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Robby the Robot\",\r\n    username: \"robo-6\",\r\n    emial: \"robby@forbidden.planet\",\r\n    about: \"Robby the Robot is a fictional character and science fiction icon who first appeared in the 1956 film Forbidden Planet. He made a number of subsequent appearances in science fiction movies and television programs, usually without specific reference to the original film character.\"\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Gort\",\r\n    username: \"robo-7\",\r\n    emial: \"gort@still.earth\",\r\n    about: \"Gort is eight-foot tall, seamless robot apparently constructed from a single piece of 'flexible metal'. He is but one member of a 'race of robots' invented by an interplanetary confederation to protect their citizens against all aggression by destroying any aggressors. Klaatu describes 'him' as one of an interstellar police force, holding irrevocable powers to 'preserve the peace' by destroying any aggressor.\"\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"HAL 9000\",\r\n    username: \"robo-8\",\r\n    emial: \"hal9000@discovery.one\",\r\n    about: \"HAL 9000 is a fictional character and the main antagonist in Arthur C. Clarke's Space Odyssey series. First appearing in the 1968 film 2001: A Space Odyssey, HAL (Heuristically programmed ALgorithmic computer) is a sentient computer (or artificial general intelligence) that controls the systems of the Discovery One spacecraft and interacts with the ship's astronaut crew. Part of HAL's hardware is shown towards the end of the film, but he is mostly depicted as a camera lens containing a red or yellow dot, instances of which are located throughout the ship.\"\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Bender\",\r\n    username: \"robo-9\",\r\n    emial: \"bender.rodriquez@planetexpress.inc\",\r\n    about: \"Bender Bending Rodríguez (designated in-universe as Bending Unit 22, unit number 1,729, serial number 2716057) is a fictional character who is one of the main characters in the animated television series Futurama. He fulfills a comic, antihero-type role in Futurama and is described by fellow character Leela as an 'alcoholic, whore-mongering, chain-smoking gambler'. Bender, a high-tech industrial metalworking robot, was built in 2996 at Fábrica Robótica De La Madre (Spanish: 'Mom's Robot Factory'), a manufacturing facility of Mom's Friendly Robot Company in Tijuana, Mexico.\"\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Marvin, Paranoid Android\",\r\n    username: \"robo-10\",\r\n    emial: \"marvin@siriuscybernetics.corp\",\r\n    about: \"Marvin the Paranoid Android is a fictional character in The Hitchhiker's Guide to the Galaxy series by Douglas Adams. Marvin is the ship's robot aboard the starship Heart of Gold. Originally built as one of many failed prototypes of Sirius Cybernetics Corporation's GPP (Genuine People Personalities) technology, Marvin is afflicted with severe depression and boredom, in part because he has a 'brain the size of a planet' which he is seldom, if ever, given the chance to use. Indeed, the true horror of Marvin's existence is that no task he could be given would occupy even the tiniest fraction of his vast intellect. Marvin claims he is 50,000 times more intelligent than a human, (or 30 billion times more intelligent than a live mattress) though this is, if anything, an underestimation.\"\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"R2-D2\",\r\n    username: \"robo-11\",\r\n    emial: \"r2d2@rebelalli.ance\",\r\n    about: \"R2-D2 is a fictional robot character in the Star Wars franchise created by George Lucas. A small astromech droid, R2-D2 is a major character and appears in nine out of the ten Star Wars films to date. A resourceful astromech droid, R2-D2 served Padmé Amidala, Anakin Skywalker and Luke Skywalker in turn, showing great bravery in rescuing his masters and their friends from many perils.\"\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"C-3PO\",\r\n    username: \"robo-12\",\r\n    emial: \"c3po@skywalkercustoms.tat\",\r\n    about: \"C-3PO is a humanoid robot character from the Star Wars franchise who appears in the original trilogy, the prequel trilogy and the sequel trilogy. Built by Anakin Skywalker, and a constant companion to astromech R2-D2, C-3PO was designed as a protocol droid intended to assist in etiquette, customs, and translation, boasting that he is 'fluent in over six million forms of communication'.\"\r\n  }\r\n]","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n  root: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    margin: 0,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing.unit,\r\n    top: theme.spacing.unit,\r\n    color: theme.palette.grey[500],\r\n  },\r\n}))(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    margin: 0,\r\n    padding: theme.spacing.unit,\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nclass CustomizedDialogDemo extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { children, name } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Button size=\"small\" color=\"default\" onClick={this.handleClickOpen}>\r\n          Learn More\r\n        </Button>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.open}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {name}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {children}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"default\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedDialogDemo;","import React from 'react';\r\nimport './RoboCard.css';\r\nimport DialogueBox from '../containers/DialogueBox';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 300,\r\n  },\r\n  tooltip: {\r\n    fontSize: 15,\r\n  },\r\n  media: {\r\n    // ⚠️ object-fit is not supported by IE 11.\r\n    objectFit: 'cover',\r\n    minWidth: 300,\r\n    zIndex: 2,\r\n    position: 'relative',\r\n  },\r\n  progress: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    margin: 'auto',\r\n    top: 0,\r\n    bottom: 0,\r\n    zIndex: 1,    \r\n    color: '#6f6f6f',\r\n  },\r\n};\r\n\r\nclass RoboCard extends React.Component {\r\n\r\n  render() {\r\n    const { classes, addClasses, name, email, about, id } = this.props;\r\n    const imgID = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\r\n\r\n    return(\r\n      <Card className={classes.card + addClasses} id={`robo${id}`}>\r\n        <CardActionArea>\r\n          <CircularProgress className={classes.progress} />\r\n          <Tooltip classes={{ tooltip: classes.tooltip }} title={`Contemplative Rando Robo-${id}`} placement=\"top\">\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Contemplative Robo\"\r\n              className={classes.media}\r\n              height=\"350\"\r\n              image={`https://robohash.org/${imgID}?300x350`}\r\n              aria-label={`Contemplative Robo-${id}`}\r\n            />\r\n          </Tooltip>\r\n          <Divider />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              {email}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"default\">\r\n            Share\r\n          </Button>\r\n          <DialogueBox name={name}>\r\n            <Typography gutterBottom>\r\n              {about}\r\n            </Typography>\r\n          </DialogueBox>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nRoboCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RoboCard);","import React from 'react';\r\nimport RoboCard from './RoboCard';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport 'tachyons';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: '1500px',\r\n    margin: 'auto',\r\n    [theme.breakpoints.down('md')]: {\r\n      maxWidth: '100%',\r\n    },\r\n  },\r\n  wrapper: {\r\n    [theme.breakpoints.down('md')]: {\r\n      maxWidth: '100%',\r\n    },\r\n  },\r\n  control: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass CardGrid extends React.Component {\r\n  state = {\r\n    spacing: '16',\r\n  };\r\n\r\n  render() {\r\n    const { classes, robots } = this.props;\r\n    const { spacing } = this.state;\r\n\r\n    return (\r\n      <Grid container className={classes.root} spacing={16}>\r\n        <Grid item xs={12}>\r\n          <Grid container className={classes.wrapper} justify=\"center\" spacing={Number(spacing)}>\r\n            {robots.map(robot => (\r\n              <Grid key={robot.id} item>\r\n                <RoboCard \r\n                  addClasses=\"robo-card\" \r\n                  id={robot.id} \r\n                  name={robot.name} \r\n                  email={robot.email} \r\n                  about={robot.about}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nCardGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CardGrid);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Link from '@material-ui/core/Link';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    marginTop: '20px',\r\n    height: 'auto',\r\n    padding: '5px 0',\r\n  },\r\n  icon: {\r\n    marginBottom: '10px',\r\n  },\r\n  label: {\r\n    color: 'white',\r\n  }\r\n};\r\n\r\nclass Footer extends React.Component {\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const url = \"https://github.com/UncaughtTypeError/\";\r\n\r\n    return (\r\n      <BottomNavigation\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction \r\n          label=\"Repo\" \r\n          icon={\r\n            <Link href={url} className={classes.link}>\r\n              <FontAwesomeIcon \r\n                icon={['fab', 'github']} \r\n                size=\"2x\" \r\n                color=\"white\" \r\n                className={classes.icon} \r\n              />\r\n            </Link>\r\n          } \r\n        />\r\n      </BottomNavigation>\r\n    );\r\n  }\r\n}\r\n\r\nFooter.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Footer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 200,\r\n      '&:focus': {\r\n        width: 300,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nclass SearchBox extends React.Component {\r\n\r\n  render() {\r\n    const { classes, searchChange } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            onChange={searchChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBox.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchBox);","import React from 'react';\nimport './App.css';\nimport { robots } from '../utils/robots';\nimport CardGrid from '../components/CardGrid';\nimport Footer from '../components/Footer'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// Header Component Dependencies\nimport SearchBox from '../components/SearchBox';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n// Theme Configuration\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// FontAwesome global library\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n \nlibrary.add(fab, fas)\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  typography: { useNextVariants: true },\n});\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: '10px',\n  },\n  positionFixed: {\n    marginBottom: '120px',\n  },\n  grow: {\n    flexGrow: 1,\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  title: {\n    display: 'none',\n    textAlign: 'center',\n    [theme.breakpoints.down('md')]: {\n      marginRight: '20px',\n    },\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  progress: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    margin: 'auto',\n    top: 0,\n    bottom: 0,\n    zIndex: 1,    \n    color: '#6f6f6f',\n  },\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/UncaughtTypeError/MyJasonServer/robots')\n      .then(response => response.json())\n      .then(robotsObj => this.setState({ robots: robotsObj }))\n      .catch(function onError(error) {\n        this.setState({ robots: robots });\n        console.error('Error:',error);\n      });\n  }\n\n  onSearchChange = (event) => { \n    this.setState({ searchfield: event.target.value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { robots, searchfield } = this.state;\n\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n\n    return !robots.length ?\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <CircularProgress className={classes.progress} />\n      </MuiThemeProvider> \n      :\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className={`${classes.root} ${classes.positionFixed}`}>\n          {/* TODO: use Header component instead*/}\n          <AppBar position=\"fixed\" color=\"default\">\n            <Toolbar>\n              <Typography className={`${classes.title} robo-title`} variant=\"h1\" color=\"inherit\" noWrap>\n                RoboFriends\n              </Typography>\n              <div className={classes.grow} />\n              <SearchBox searchChange={this.onSearchChange} />\n            </Toolbar>\n          </AppBar>\n        </div>\n        <CardGrid robots={filteredRobots} /> \n        <Footer />\n      </MuiThemeProvider>\n    }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}